// This file contains rules to create a perfect hash function for operator mapping

%delimiters="\"
%language=ANSI-C
%define lookup-function-name lookup
%struct-type

%{
    // Manually include header header file
    #include "mapop.h"

    /*
     ! These have to be manually replaced if used as prefix:
        
        INC -> PIN
        DEC -> PDE
        ADD -> POS
        SUB -> NEG
    */
%}

// Struct to map operators to
struct s_op;

%%
++\     INC,    POSTFIX,    LTR,    1
--\     DEC,    POSTFIX,    LTR,    1
!\      NOT,    PREFIX,     RTL,    2
*\      MUL,    INFIX,      LTR,    3
/\      DIV,    INFIX,      LTR,    3
"%"\    MOD,    INFIX,      LTR,    3
+\      ADD,    INFIX,      LTR,    4
-\      SUB,    INFIX,      LTR,    4
<\      LET,    INFIX,      LTR,    5
<=\     LEQ,    INFIX,      LTR,    5
>\      GRT,    INFIX,      LTR,    5
>=\     GEQ,    INFIX,      LTR,    5
==\     EQU,    INFIX,      LTR,    6
!=\     NEQ,    INFIX,      LTR,    6
&&\     AND,    INFIX,      LTR,    7
||\     ORO,    INFIX,      LTR,    8
=\      ASS,    INFIX,      RTL,    10
+=\     PEQ,    INFIX,      RTL,    10
-=\     MEQ,    INFIX,      RTL,    10
*=\     TEQ,    INFIX,      RTL,    10
/=\     DEQ,    INFIX,      RTL,    10
"%="\   REQ,    INFIX,      RTL,    10
,\      LIS,    INFIX,      RTL,    11
%%

operator *mapop(char *expr) {
    return lookup(expr, strlen(expr));
}

operator *mappreop(char *expr) {
    operator *ret = lookup(expr, strlen(expr));
    switch(ret->opcode) {
        case INC:
            ret->opcode = PIN;
            ret->associativity = RTL;
            ret->position = PREFIX;
            ret->precedence = 2;
            break;
        case DEC:
            ret->opcode = PDE;
            ret->associativity = RTL;
            ret->position = PREFIX;
            ret->precedence = 2;
            break;
        case ADD:
            ret->opcode = POS;
            ret->associativity = RTL;
            ret->position = PREFIX;
            ret->precedence = 2;
            break;
        case SUB:
            ret->opcode = NEG;
            ret->associativity = RTL;
            ret->position = PREFIX;
            ret->precedence = 2;
        default: break;
    }
    return ret;
}